---
import Layout from '../../../layouts/DashboardLayout.astro';
const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<Layout title="Admin Dashboard">
  <div class="max-w-7xl mx-auto space-y-6">
    <!-- Overview Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <div class="bg-white rounded-lg shadow-sm p-6">
        <h3 class="text-sm font-medium text-gray-500">Totalt antal användare</h3>
        <p id="totalUsers" class="text-2xl font-bold text-primary mt-2">0</p>
      </div>
      
      <div class="bg-white rounded-lg shadow-sm p-6">
        <h3 class="text-sm font-medium text-gray-500">Aktiva prenumerationer</h3>
        <p id="activeSubscriptions" class="text-2xl font-bold text-green-600 mt-2">0</p>
      </div>

      <div class="bg-white rounded-lg shadow-sm p-6">
        <h3 class="text-sm font-medium text-gray-500">Aktiva kampanjkoder</h3>
        <p id="activePromoCodes" class="text-2xl font-bold text-blue-600 mt-2">0</p>
      </div>
    </div>

    <!-- Tabs -->
    <div class="bg-white rounded-lg shadow-sm">
      <div class="border-b border-gray-200">
        <div class="flex gap-4 p-4">
          <button 
            class="tab-btn active text-primary border-b-2 border-primary px-3 py-2" 
            data-tab="users"
          >
            Användare
          </button>
          <button 
            class="tab-btn text-gray-500 hover:text-primary px-3 py-2" 
            data-tab="promocodes"
          >
            Kampanjkoder
          </button>
          <button 
            class="tab-btn text-gray-500 hover:text-primary px-3 py-2" 
            data-tab="subscriptions"
          >
            Prenumerationer
          </button>
        </div>
      </div>

      <!-- Users Tab -->
      <div id="usersTab" class="tab-content p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-lg font-semibold">Användare</h2>
          <input 
            type="text" 
            placeholder="Sök användare..." 
            class="rounded-lg border-gray-300"
            id="userSearch"
          />
        </div>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Skapad</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Senast inloggad</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Åtgärder</th>
              </tr>
            </thead>
            <tbody id="usersList" class="divide-y divide-gray-200">
              <!-- Fylls i dynamiskt -->
            </tbody>
          </table>
        </div>
      </div>

      <!-- Promocodes Tab -->
      <div id="promocodesTab" class="tab-content hidden p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-lg font-semibold">Kampanjkoder</h2>
          <button 
            id="addPromoCodeBtn"
            class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary/90"
          >
            Lägg till kod
          </button>
        </div>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Kod</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Dagar</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Skapad</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Åtgärder</th>
              </tr>
            </thead>
            <tbody id="promocodesList" class="divide-y divide-gray-200">
              <!-- Fylls i dynamiskt -->
            </tbody>
          </table>
        </div>
      </div>

      <!-- Subscriptions Tab -->
      <div id="subscriptionsTab" class="tab-content hidden p-6">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-lg font-semibold">Prenumerationer</h2>
        </div>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Användare</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Startdatum</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Slutdatum</th>
                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Åtgärder</th>
              </tr>
            </thead>
            <tbody id="subscriptionsList" class="divide-y divide-gray-200">
              <!-- Fylls i dynamiskt -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Promocode Modal -->
  <div id="addPromoCodeModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-lg max-w-md w-full p-6">
      <h3 class="text-lg font-semibold mb-4">Lägg till kampanjkod</h3>
      <form id="addPromoCodeForm" class="space-y-4">
        <div>
          <label for="code" class="block text-sm font-medium text-gray-700">Kod</label>
          <input
            type="text"
            id="code"
            name="code"
            required
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary"
          />
        </div>
        <div>
          <label for="duration" class="block text-sm font-medium text-gray-700">Antal dagar</label>
          <input
            type="number"
            id="duration"
            name="duration"
            required
            min="1"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary"
          />
        </div>
        <div class="flex justify-end gap-3">
          <button
            type="button"
            onclick="closeAddPromoCodeModal()"
            class="px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg"
          >
            Avbryt
          </button>
          <button
            type="submit"
            class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/90"
          >
            Spara
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

```javascript
<script define:vars={{ supabaseUrl, supabaseKey }}>
window.addEventListener('load', async () => {
  const supabase = window.supabase.createClient(supabaseUrl, supabaseKey);
  let currentTab = 'users';

  // Hämta användarinfo och verifiera admin
  const { data: { session } } = await supabase.auth.getSession();
  if (!session?.user || session.user.email !== 'davveravve@gmail.com') {
    window.location.href = '/dashboard';
    return;
  }

  // Tab handling
  const switchTab = (tabId) => {
    document.querySelectorAll('.tab-content').forEach(tab => tab.classList.add('hidden'));
    document.querySelectorAll('.tab-btn').forEach(btn => {
      btn.classList.remove('text-primary', 'border-b-2', 'border-primary');
      btn.classList.add('text-gray-500');
    });

    document.getElementById(`${tabId}Tab`).classList.remove('hidden');
    const activeBtn = document.querySelector(`[data-tab="${tabId}"]`);
    activeBtn.classList.remove('text-gray-500');
    activeBtn.classList.add('text-primary', 'border-b-2', 'border-primary');
    currentTab = tabId;
    loadTabData(tabId);
  };

  document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.addEventListener('click', () => switchTab(btn.dataset.tab));
  });

  // Load data functions
  const loadTabData = async (tab) => {
    switch (tab) {
      case 'users':
        await loadUsers();
        break;
      case 'promocodes':
        await loadPromoCodes();
        break;
      case 'subscriptions':
        await loadSubscriptions();
        break;
    }
  };

  const loadUsers = async () => {
    const { data: users, error } = await supabase.auth.admin.listUsers();
    if (error) {
      console.error('Error loading users:', error);
      return;
    }

    const usersList = document.getElementById('usersList');
    usersList.innerHTML = users.map(user => `
      <tr>
        <td class="px-6 py-4 whitespace-nowrap">${user.email}</td>
        <td class="px-6 py-4 whitespace-nowrap">${new Date(user.created_at).toLocaleDateString('sv-SE')}</td>
        <td class="px-6 py-4 whitespace-nowrap">${new Date(user.last_sign_in_at).toLocaleDateString('sv-SE')}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="px-2 py-1 text-xs rounded-full ${user.banned ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}">
            ${user.banned ? 'Avstängd' : 'Aktiv'}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right">
          <button 
            onclick="toggleUserBan('${user.id}', ${user.banned})"
            class="text-sm text-${user.banned ? 'green' : 'red'}-600 hover:text-${user.banned ? 'green' : 'red'}-800"
          >
            ${user.banned ? 'Aktivera' : 'Stäng av'}
          </button>
        </td>
      </tr>
    `).join('');

    document.getElementById('totalUsers').textContent = users.length;
  };

  const loadPromoCodes = async () => {
    const { data: codes, error } = await supabase
      .from('promo_codes')
      .select('*')
      .order('created_at', { ascending: false });

    if (error) {
      console.error('Error loading promocodes:', error);
      return;
    }

    const promocodesList = document.getElementById('promocodesList');
    promocodesList.innerHTML = codes.map(code => `
      <tr>
        <td class="px-6 py-4 whitespace-nowrap font-mono">${code.code}</td>
        <td class="px-6 py-4 whitespace-nowrap">${code.duration_days} dagar</td>
        <td class="px-6 py-4 whitespace-nowrap">${new Date(code.created_at).toLocaleDateString('sv-SE')}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="px-2 py-1 text-xs rounded-full ${code.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
            ${code.is_active ? 'Aktiv' : 'Inaktiv'}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right">
          <button 
            onclick="togglePromoCode('${code.code}', ${code.is_active})"
            class="text-sm text-${code.is_active ? 'red' : 'green'}-600 hover:text-${code.is_active ? 'red' : 'green'}-800"
          >
            ${code.is_active ? 'Inaktivera' : 'Aktivera'}
          </button>
        </td>
      </tr>
    `).join('');

    document.getElementById('activePromoCodes').textContent = codes.filter(c => c.is_active).length;
  };

  const loadSubscriptions = async () => {
    const { data: subscriptions, error } = await supabase
      .from('subscriptions')
      .select('*, user:user_id(email)')
      .order('created_at', { ascending: false });

    if (error) {
      console.error('Error loading subscriptions:', error);
      return;
    }

    const subscriptionsList = document.getElementById('subscriptionsList');
    subscriptionsList.innerHTML = subscriptions.map(sub => `
      <tr>
        <td class="px-6 py-4 whitespace-nowrap">${sub.user?.email || 'Unknown'}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="px-2 py-1 text-xs rounded-full ${sub.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}">
            ${sub.status === 'active' ? 'Aktiv' : 'Trial'}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">${new Date(sub.created_at).toLocaleDateString('sv-SE')}</td>
        <td class="px-6 py-4 whitespace-nowrap">${new Date(sub.current_period_end).toLocaleDateString('sv-SE')}</td>
        <td class="px-6 py-4 whitespace-nowrap text-right">
          <button 
            onclick="cancelSubscription('${sub.id}')"
            class="text-sm text-red-600 hover:text-red-800"
          >
            Avsluta
          </button>
        </td>
      </tr>
    `).join('');

    document.getElementById('activeSubscriptions').textContent = subscriptions.filter(s => s.status === 'active').length;
  };

  // Add PromoCode handlers
  window.closeAddPromoCodeModal = () => {
    document.getElementById('addPromoCodeModal').classList.add('hidden');
    document.getElementById('addPromoCodeForm').reset();
  };

  document.getElementById('addPromoCodeBtn').addEventListener('click', () => {
    document.getElementById('addPromoCodeModal').classList.remove('hidden');
  });

  document.getElementById('addPromoCodeForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const code = document.getElementById('code').value;
    const duration = parseInt(document.getElementById('duration').value);

    try {
      const { error } = await supabase
        .from('promo_codes')
        .insert([{
          code,
          duration_days: duration,
          created_by: session.user.id,
          is_active: true
        }]);

      if (error) throw error;
      closeAddPromoCodeModal();
      loadPromoCodes();
    } catch (error) {
      alert('Ett fel uppstod: ' + error.message);
    }
  });

  // Toggle handlers
  window.toggleUserBan = async (userId, currentStatus) => {
    try {
      const { error } = await supabase.auth.admin.updateUserById(
        userId,
        { banned: !currentStatus }
      );

      if (error) throw error;
      loadUsers();
    } catch (error) {
      alert('Ett fel uppstod: ' + error.message);
    }
  };

  window.togglePromoCode = async (code, currentStatus) => {
    try {
      const { error } = await supabase
        .from('promo_codes')
        .update({ is_active: !currentStatus })
        .eq('code', code);

      if (error) throw error;
      loadPromoCodes();
    } catch (error) {
      alert('Ett fel uppstod: ' + error.message);
    }
  };

  window.cancelSubscription = async (subId) => {
    if (!confirm('Är du säker på att du vill avsluta denna prenumeration?')) return;

    try {
      const { error } = await supabase
        .from('subscriptions')
        .update({ status: 'cancelled' })
        .eq('id', subId);

      if (error) throw error;
      loadSubscriptions();
    } catch (error) {
      alert('Ett fel uppstod: ' + error.message);
    }
  };

  // Load initial data
  loadUsers();
});
</script>
